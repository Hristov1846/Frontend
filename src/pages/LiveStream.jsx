// frontend/src/pages/LiveStream.jsx
import React, { useState, useEffect } from "react";
import axios from "axios";

export default function LiveStream() {
  const [isLive, setIsLive] = useState(false);
  const [viewers, setViewers] = useState(0);
  const [messages, setMessages] = useState([]);
  const [chatInput, setChatInput] = useState("");
  const [donations, setDonations] = useState([]);

  // –°–∏–º—É–ª–∞—Ü–∏—è –∑–∞ –±—Ä–æ—è—á –Ω–∞ –∑—Ä–∏—Ç–µ–ª–∏
  useEffect(() => {
    if (isLive) {
      const interval = setInterval(() => {
        setViewers((prev) => prev + Math.floor(Math.random() * 3)); 
      }, 3000);
      return () => clearInterval(interval);
    }
  }, [isLive]);

  const startLive = () => {
    setIsLive(true);
    setViewers(1);
    setMessages([]);
    setDonations([]);
  };

  const stopLive = () => {
    setIsLive(false);
    setViewers(0);
  };

  const sendMessage = () => {
    if (chatInput.trim() !== "") {
      setMessages([...messages, { sender: "–ü–æ—Ç—Ä–µ–±–∏—Ç–µ–ª", text: chatInput }]);
      setChatInput("");
    }
  };

  const sendDonation = (type) => {
    const donationItems = {
      rose: "üåπ –†–æ–∑–∞",
      dolphin: "üê¨ –î–µ–ª—Ñ–∏–Ω",
      shark: "ü¶à –ê–∫—É–ª–∞",
      elephant: "üêò –°–ª–æ–Ω",
      monkey: "üêí –ú–∞–π–º—É–Ω–∞",
      train: "üöÇ –í–ª–∞–∫",
    };
    setDonations([...donations, donationItems[type]]);
  };

  return (
    <div className="min-h-screen bg-gradient-to-tr from-purple-600 to-pink-500 p-6 flex flex-col items-center text-white">
      <h1 className="text-4xl font-extrabold mb-6">üì∫ Live Streaming</h1>

      {!isLive ? (
        <button
          onClick={startLive}
          className="bg-green-500 px-6 py-3 rounded-xl text-lg font-bold hover:bg-green-600"
        >
          üöÄ –°—Ç–∞—Ä—Ç–∏—Ä–∞–π –ª–∞–π—Ñ
        </button>
      ) : (
        <div className="w-full max-w-3xl bg-black/70 rounded-2xl p-4 relative">
          <div className="flex justify-between items-center mb-4">
            <h2 className="text-2xl font-bold">üî¥ –ù–∞ –∂–∏–≤–æ</h2>
            <span className="bg-red-500 px-4 py-1 rounded-full">
              üëÄ {viewers} –∑—Ä–∏—Ç–µ–ª–∏
            </span>
          </div>

          {/* –í–∏–¥–µ–æ —Å–µ–∫—Ü–∏—è (—Ç—É–∫ —â–µ –≤–ª–µ–∑–µ —Ä–µ–∞–ª–Ω–æ—Ç–æ –≤–∏–¥–µ–æ –ø–æ-–∫—ä—Å–Ω–æ) */}
          <div className="bg-gray-800 h-64 flex items-center justify-center rounded-xl mb-4">
            <p className="text-gray-300">üé• –í–∏–¥–µ–æ—Ç–æ –≤—ä—Ä–≤–∏ —Ç—É–∫...</p>
          </div>

          {/* –î–∞—Ä–µ–Ω–∏—è */}
          <div className="flex space-x-2 mb-4">
            <button
              onClick={() => sendDonation("rose")}
              className="bg-pink-500 px-4 py-2 rounded-lg hover:bg-pink-600"
            >
              üåπ –†–æ–∑–∞
            </button>
            <button
              onClick={() => sendDonation("dolphin")}
              className="bg-blue-400 px-4 py-2 rounded-lg hover:bg-blue-500"
            >
              üê¨ –î–µ–ª—Ñ–∏–Ω
            </button>
            <button
              onClick={() => sendDonation("shark")}
              className="bg-gray-600 px-4 py-2 rounded-lg hover:bg-gray-700"
            >
              ü¶à –ê–∫—É–ª–∞
            </button>
            <button
              onClick={() => sendDonation("elephant")}
              className="bg-yellow-600 px-4 py-2 rounded-lg hover:bg-yellow-700"
            >
              üêò –°–ª–æ–Ω
            </button>
            <button
              onClick={() => sendDonation("monkey")}
              className="bg-green-500 px-4 py-2 rounded-lg hover:bg-green-600"
            >
              üêí –ú–∞–π–º—É–Ω–∞
            </button>
            <button
              onClick={() => sendDonation("train")}
              className="bg-red-600 px-4 py-2 rounded-lg hover:bg-red-700"
            >
              üöÇ –í–ª–∞–∫
            </button>
          </div>

          {/* –ß–∞—Ç */}
          <div className="bg-gray-900 rounded-xl p-3 h-48 overflow-y-auto mb-3">
            {messages.length > 0 ? (
              messages.map((msg, i) => (
                <p key={i} className="text-sm mb-1">
                  <span className="font-bold">{msg.sender}: </span>
                  {msg.text}
                </p>
              ))
            ) : (
              <p className="text-gray-400">–ù—è–º–∞ —Å—ä–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç–∞...</p>
            )}
          </div>
          <div className="flex space-x-2">
            <input
              type="text"
              placeholder="–ù–∞–ø–∏—à–∏ —Å—ä–æ–±—â–µ–Ω–∏–µ..."
              value={chatInput}
              onChange={(e) => setChatInput(e.target.value)}
              className="flex-1 p-2 rounded-lg text-black"
            />
            <button
              onClick={sendMessage}
              className="bg-blue-500 px-4 py-2 rounded-lg hover:bg-blue-600"
            >
              ‚û§
            </button>
          </div>

          {/* –î–∞—Ä–µ–Ω–∏—è, –≤–∏–∑—É–∞–ª–∏–∑–∏—Ä–∞–Ω–∏ –Ω–∞ –µ–∫—Ä–∞–Ω–∞ */}
          {donations.length > 0 && (
            <div className="absolute top-4 right-4 bg-white text-black px-3 py-2 rounded-lg shadow-lg animate-bounce">
              {donations[donations.length - 1]}
            </div>
          )}

          <button
            onClick={stopLive}
            className="mt-6 bg-red-600 px-6 py-3 rounded-xl font-bold hover:bg-red-700"
          >
            ‚èπ –°–ø—Ä–∏ –ª–∞–π—Ñ–∞
          </button>
        </div>
      )}
    </div>
  );
}
